<Page
  x:Class="OpenKneeboardApp.TabSettingsPage"
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:local="using:OpenKneeboardApp"
  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
  mc:Ignorable="d"
  Background="{ThemeResource SystemChromeMediumLowColor}">
  <Page.Resources>
    <local:BooleanToVisibilityConverter x:Key="BooleanToVisibility" />
    <DataTemplate x:Key="TabHeader" x:DataType="local:TabUIData">
      <Grid ColumnDefinitions="Auto,*,Auto">
        <Button
          Grid.Column="0"
          Tag="{x:Bind InstanceID}"
          ToolTipService.ToolTip="Rename tab"
          Margin="0,0,8,0"
          Click="RenameTab">
          <SymbolIcon Symbol="Edit" />
        </Button>
        <TextBlock
          Grid.Column="1"
          Style="{StaticResource BodyStrongTextBlockStyle}"
          Text="{x:Bind Title,Mode=OneWay}"
          VerticalAlignment="Center"
        />
        <Button Grid.Column="2" Tag="{x:Bind InstanceID}" Click="RemoveTab">
          <SymbolIcon Symbol="Delete" />
        </Button>
      </Grid>
    </DataTemplate>
    <!-- Any Tab -->
    <DataTemplate x:Key="GenericTabTemplate" x:DataType="local:TabUIData">
      <StackPanel
        Orientation="Vertical"
        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
        CornerRadius="8"
        Margin="4"
        Spacing="8"
        Padding="8">
        <ContentPresenter 
          Content="{x:Bind}"
          ContentTemplate="{StaticResource TabHeader}"
        />
        <TextBlock
          IsTextSelectionEnabled="true"
          Visibility="{x:Bind HasDebugInformation, Converter={StaticResource BooleanToVisibility}}"
          Style="{ThemeResource BodyTextBlockStyle}"
          Text="{x:Bind DebugInformation, Mode=OneWay}"
        />
      </StackPanel>
    </DataTemplate>
    <!-- Browser Tab -->
    <DataTemplate x:Key="BrowserTabTemplate" x:DataType="local:BrowserTabUIData">
      <StackPanel
        Orientation="Vertical"
        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
        CornerRadius="8"
        Margin="4"
        Spacing="8"
        Padding="8">
        <ContentPresenter 
          Content="{x:Bind}"
          ContentTemplate="{StaticResource TabHeader}"
          Margin="0,0,0,8"
        />
        <ToggleSwitch
          IsOn="{x:Bind IsBackgroundTransparent, Mode=TwoWay}"
          Header="Transparent background"
          OffContent="Background is solid"
          OnContent="Background is transparent"
        />
        <ToggleSwitch
          IsOn="{x:Bind IsSimHubIntegrationEnabled, Mode=TwoWay}"
          Header="SimHub integration"
          OffContent="Disabled"
          OnContent="Automatically resizes to fit SimHub dashboards"
        />
        <ToggleSwitch
          IsOn="{x:Bind IsDeveloperToolsWindowEnabled, Mode=TwoWay}"
          Header="Developer tools window"
          OffContent="Disabled"
          OnContent="Enabled"
        />
      </StackPanel>
    </DataTemplate>
    <!-- DCS Radio Tab -->
    <DataTemplate x:Key="DCSRadioLogTabTemplate" x:DataType="local:DCSRadioLogTabUIData">
      <StackPanel
        Orientation="Vertical"
        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
        CornerRadius="8"
        Margin="4"
        Spacing="8"
        Padding="8">
        <ContentPresenter 
          Content="{x:Bind}"
          ContentTemplate="{StaticResource TabHeader}"
          Margin="0,0,0,8"
        />
        <RadioButtons
          SelectedIndex="{x:Bind MissionStartBehavior, Mode=TwoWay}"
          MaxColumns="2"
          Header="On mission start">
          <x:String>Draw a separator</x:String>
          <x:String>Clear history</x:String>
        </RadioButtons>
        <ToggleSwitch
          IsOn="{x:Bind TimestampsEnabled, Mode=TwoWay}"
          Header="Timestamps"
          OffContent="No Timestamps"
          OnContent="Show Timestamps"
        />
      </StackPanel>
    </DataTemplate>
    <!-- Window Capture Tab -->
    <DataTemplate x:Key="WindowCaptureTabTemplate" x:DataType="local:WindowCaptureTabUIData">
      <Expander
        Background="{ThemeResource CardBackgroundFillColorDefaultBrush}"
        CornerRadius="8"
        Margin="4"
        Padding="8"
        HorizontalAlignment="Stretch"
        HorizontalContentAlignment="Stretch"
        x:DefaultBindMode="TwoWay">
        <Expander.Header>
          <ContentPresenter 
            Content="{x:Bind Mode=OneWay}"
            ContentTemplate="{StaticResource TabHeader}"
          />
        </Expander.Header>
        <Expander.Content>
          <StackPanel Orientation="Vertical" Spacing="8">
            <TextBox
              Header="Executable path"
              Text="{x:Bind ExecutablePathPattern}"
              PlaceholderText="Executable path pattern"
            />
            <TextBlock
              Style="{ThemeResource CaptionTextBlockStyle}"
              Foreground="{ThemeResource TextFillColorSecondary}">
              The full path to the executable; MS-DOS wildcards such as '*' are supported.
            </TextBlock>
            <ToggleSwitch
              Header="Capture client area"
              IsOn="{x:Bind CaptureClientArea}"
              OnContent="Crop classic window borders, title bars, and menu bars"
              OffContent="The entire window is captured"
            />
            <TextBlock
              Style="{ThemeResource CaptionTextBlockStyle}"
              Foreground="{ThemeResource TextFillColorSecondary}">
              The 'client area' is the content of the window, excluding borders,
              title bars, and so on. This option will not remove title bars
              from windows that simulate a title bar, which includes most
              modern apps.
            </TextBlock>
            <ToggleSwitch
              Header="Use graphics tablet as mouse"
              IsOn="{x:Bind IsInputEnabled}"
              OnContent="Enabled"
              OffContent="Disabled"
            />
            <ComboBox
              Header="Match window title"
              SelectedIndex="{x:Bind MatchWindowTitle}">
              <x:String>Do not match</x:String>
              <x:String>Match exactly</x:String>
              <x:String>Match with pattern (use '*' and '?')</x:String>
            </ComboBox>
            <TextBox
              Header="Window title"
              Text="{x:Bind WindowTitle}"
              PlaceholderText="Window title"
            />
            <ToggleSwitch
              Header="Match window class"
              IsOn="{x:Bind MatchWindowClass}"
              OnContent="Enabled"
              OffContent="Disabled"
            />
            <TextBox
              Header="Window class"
              Text="{x:Bind WindowClass}"
              IsEnabled="False"
            />
            <TextBlock
              Style="{ThemeResource CaptionTextBlockStyle}"
              Foreground="{ThemeResource TextFillColorSecondary}">
              The class is meant to uniquely identify the 'kind' of window, for
              example it might be "MyApp's Main Window" or "MyApp's About
              Dialog". If this option is on, windows will only be captured if
              their window class is the same as when the tab was added.
            </TextBlock>
            <TextBlock
              Style="{ThemeResource CaptionTextBlockStyle}"
              Foreground="{ThemeResource TextFillColorSecondary}">
              Some applications - especially those built with the Universal
              Windows Platform (UWP) - do not use window classes correctly,
              so this option may need to be disabled if the window is not
              matched when the app is restarted.
            </TextBlock>
            <TextBlock
              Style="{ThemeResource CaptionTextBlockStyle}"
              Foreground="{ThemeResource TextFillColorSecondary}">
              This option is disabled by default for UWP apps, and enabled by
              default for all other apps.
            </TextBlock>
            <ToggleSwitch
              Header="Show Windows mouse cursor"
              IsOn="{x:Bind IsCursorCaptureEnabled}"
              OnContent="The real mouse cursor is visible in the tab"
              OffContent="The real mouse cursor is not not visible in the tab"
            />
            <TextBlock
              Style="{ThemeResource CaptionTextBlockStyle}"
              Foreground="{ThemeResource TextFillColorSecondary}">
              This controls whether the real Windows mouse cursor is visible
              in the tab; it does not affect which windows the mouse controls,
              and it does not affect OpenKneeboard's cursor.
            </TextBlock>
            <TextBlock
              Style="{ThemeResource CaptionTextBlockStyle}"
              Foreground="{ThemeResource TextFillColorSecondary}">
              Because the game is usually on top of captured Windows and the
              game gets all real mouse input, this option is only useful for
              niche cases.
            </TextBlock>
          </StackPanel>
        </Expander.Content>
      </Expander>
    </DataTemplate>
  </Page.Resources>
  <!-- PAGE CONTENT STARTS HERE -->
  <ScrollViewer VerticalScrollMode="Auto" Padding="24">
    <StackPanel Margin="0,0,0,16">
      <Grid
        ColumnDefinitions="*,Auto,Auto"
        Margin="0,0,0,8">
        <TextBlock
          Grid.Column="0"
          Style="{StaticResource TitleTextBlockStyle}"
          Text="Tab Settings"
          Margin="0,0,0,8"
        />
        <Button
          Grid.Column="1"
          Margin="0,0,8,0"
          HorizontalAlignment="Center"
          Style="{StaticResource AccentButtonStyle}"
          x:Name="AddTabTopButton">
          <Grid ColumnDefinitions="Auto,*">
            <FontIcon
              Grid.Column="0"
              Glyph="&#xE710;"
              FontFamily="{StaticResource SymbolThemeFontFamily}"
            />
            <TextBlock
              Margin="4,0,0,0"
              Grid.Column="1">
              Add a tab
            </TextBlock>
          </Grid>
        </Button>
        <Button
          Grid.Column="2"
          Content="Restore defaults"
          Click="RestoreDefaults"
        />
      </Grid>
      <ListView
        Grid.Row="1"
        ItemsSource="{x:Bind Tabs, Mode=OneWay}"
        x:Name="List"
        SelectionMode="None"
        CanDragItems="True"
        CanReorderItems="True"
        AllowDrop="True">
        <ListView.ItemTemplateSelector>
          <local:TabUIDataTemplateSelector
            Generic="{StaticResource GenericTabTemplate}"
            Browser="{StaticResource BrowserTabTemplate}"
            DCSRadioLog="{StaticResource DCSRadioLogTabTemplate}"
            WindowCapture="{StaticResource WindowCaptureTabTemplate}"
          />
        </ListView.ItemTemplateSelector>
      </ListView>
      <Button
        Margin="0,24,0,0"
        HorizontalAlignment="Center"
        Style="{StaticResource AccentButtonStyle}"
        x:Name="AddTabBottomButton">
        <Grid ColumnDefinitions="Auto,*">
          <FontIcon
            Grid.Column="0"
            Glyph="&#xE710;"
            FontFamily="{StaticResource SymbolThemeFontFamily}"
          />
          <TextBlock
            Margin="8,4,4,4"
            Grid.Column="1">
            Add a tab
          </TextBlock>
        </Grid>
      </Button>
      <ContentDialog
        x:Name="InstallWebView2Dialog"
        Title="Browser Tabs Unavailable"
        DefaultButton="Primary"
        PrimaryButtonText="Download"
        CloseButtonText="Cancel">
        <RichTextBlock>
          <Paragraph>
            Browser tabs require Microsoft Edge WebView2, which is not
            installed.
          </Paragraph>
          <Paragraph>
            To add a browser tab, download and install Microsoft Edge WebView2,
            then restart OpenKneeboard.
          </Paragraph>
        </RichTextBlock>
      </ContentDialog>
      <ContentDialog
        x:Name="AddBrowserDialog"
        Title="Add Web Dashboard"
        DefaultButton="Primary"
        PrimaryButtonText="Add Dashboard"
        CloseButtonText="Cancel"
        IsPrimaryButtonEnabled="False">
        <StackPanel
          Orientation="Vertical"
          Spacing="20">
          <TextBlock Style="{ThemeResource BodyTextBlockStyle}">
            Web dashboard tabs display a single screen - they are not a
            general-purpose web browser. For a less limited browser, use your
            normal browser with a Window Capture Tab.
          </TextBlock>
          <TextBox
            x:Name="AddBrowserAddress"
            Header="Dashboard Address:"
            PlaceholderText="https://example.com"
            TextChanged="OnAddBrowserAddressTextChanged"
          />
        </StackPanel>
      </ContentDialog>
    </StackPanel>
  </ScrollViewer>
</Page>
