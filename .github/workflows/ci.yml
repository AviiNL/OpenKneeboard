name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: Build (${{matrix.config}})
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
        with:
          path: source
      - name: Make build directory
        run: cmake -E make_directory build
      - name: Fetch code-signing key
        env:
          CODE_SIGNING_PFX_BASE64: ${{ secrets.CODE_SIGNING_KEY_PFX_BASE64 }}
        run: '[System.Convert]::FromBase64String($Env:CODE_SIGNING_PFX_BASE64) | Set-Content ${{runner.temp}}/MyCert.pfx -AsByteStream'
      - name: Configure
        working-directory: build
        run: |
          cmake ${{github.workspace}}/source `
            "-DSIGNTOOL_KEY_ARGS=/f;${{runner.temp}}/MyCert.pfx" `
      - name: Compile
        working-directory: build
        run: cmake --build . --config ${{matrix.config}} --parallel
      - name: Install
        working-directory: build
        run: cmake --install . --config ${{matrix.config}} --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}
      - name: Upload Zips
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}
      - name: Create .msi
        if: matrix.config == 'RelWithDebInfo'
        working-directory: build
        run: cmake --build . --config ${{matrix.config}} --target package
    strategy:
      matrix:
        config: [RelWithDebInfo, Debug]
