name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: Build (${{matrix.config}})
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
        with:
          path: source
      - name: Fetch code-signing key
        env:
          CODE_SIGNING_PFX_BASE64: ${{ secrets.CODE_SIGNING_KEY_PFX_BASE64 }}
        run: '[System.Convert]::FromBase64String($Env:CODE_SIGNING_PFX_BASE64) | Set-Content ${{runner.temp}}/MyCert.pfx -AsByteStream'
      - name: Make build directory
        run: cmake -E make_directory build
      - name: Configure
        working-directory: build
        run: |
          cmake ${{github.workspace}}/source `
            "-DSIGNTOOL_KEY_ARGS=/f;${{runner.temp}}/MyCert.pfx" `
      - name: Compile
        working-directory: build
        run: |
          cmake --build . `
            --config ${{matrix.config}} `
            --parallel
      - name: Install Default Components
        working-directory: build
        shell: pwsh
        run:
          cmake --install . `
            --config ${{matrix.config}} `
            --component Unspecified `
            --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}
      - name: Make Helpers Build Directory
        run: cmake -E make_directory build-helpers
      - name: Configure Helpers
        working-directory: build-helpers
        run: |
          cmake ${{github.workspace}}/source `
            "-DSIGNTOOL_KEY_ARGS=/f;${{runner.temp}}/MyCert.pfx" `
            "-DUSE_STATIC_CPP_RUNTIME=ON"
      - name: Compile Helpers
        working-directory: build-helpers
        run: |
          cmake --build . `
            --config ${{matrix.config}} `
            --target OpenKneeboard-OpenXR-Helper `
            --parallel
      - name: Install Helpers Components
        working-directory: build-helpers
        shell: pwsh
        run:
          cmake --install . `
            --config ${{matrix.config}} `
            --component Helpers `
            --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}
      - name: Upload Executable Zips
        if: ${{matrix.config}} != 'Debug'
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}
      - name: Create MSIX
        shell: pwsh
        run: |
          $kitsRoot = "build\third-party\WindowsSDKBuildToolsNuget-prefix\src\WindowsSDKBuildToolsNuget"
          $kitDir = (Get-ChildItem $kitsRoot/bin -Filter '10.0.*.*' | Select-Object -Last 1).FullName
          $kitBin = "$kitDir\x64"

          Copy-Item -Path ${{github.workspace}}\source\src\app\artifacts\* -Destination $(Get-Location)

          Push-Location ${{runner.temp}}\OpenKneeboard-${{matrix.config}}
          
          & "$kitBin\makepri.exe" `
            createconfig `
            /cf priconfig.xml `
            /dq lang-en-US 

          & "$kitBin\makepri.exe" `
            new /o `
            /cf priconfig.xml `
            /mn appxmanifest.xml `
            /pr .

          & "$kitBin\makeappx.exe" `
            pack `
            /d ${{runner.temp}}/OpenKneeboard-${{matrix.config}} `
            /p ${{runner.temp}}/OpenKneeboard-${{matrix.config}}.msix

          & "$kitBin\signtool.exe" `
            sign `
            /t http://timestamp.digicert.com `
            /fd SHA256 `
            /f "${{runner.temp}}/MyCert.pfx" `
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}.msix
      - name: Upload MSIX
        if: ${{matrix.config}} != 'Debug'
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}.msix
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}.msix
      - name: Install remote control apps
        working-directory: build
        shell: pwsh
        run:
          cmake --install . `
            --config ${{matrix.config}} `
            --component RemoteControl `
            --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-RemoteControl
      - name: Upload remote control zip
        if: ${{matrix.config}} != 'Debug'
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}-RemoteControl
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-RemoteControl/bin
      - name: Install Debug Symbols
        working-directory: build
        shell: pwsh
        run:
          cmake --install . `
            --config ${{matrix.config}} `
            --component DebugSymbols `
            --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-Symbols
      - name: Install Helpers Debug Symbols
        working-directory: build-helpers
        shell: pwsh
        run:
          cmake --install . `
            --config ${{matrix.config}} `
            --component Helpers-DebugSymbols `
            --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-Symbols
      - name: Upload Symbol Zips
        if: ${{matrix.config}} != 'Debug'
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}-Symbols
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-Symbols
    strategy:
      matrix:
        config: [RelWithDebInfo, Debug]
  release:
    name: Prepare Draft Release
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    needs: [build]
    steps:
      - uses: actions/checkout@v2
        with:
          path: source
      - name: Generate release notes
        run: sed 's/@TAG@/${{github.ref_name}}/g' source/.github/workflows/release_notes.md > ${{runner.temp}}/release_notes.md
      - name: Download build artifacts
        uses: actions/download-artifact@v2
        with:
          path: ${{runner.temp}}/artifacts
      - name: Display downloaded files
        run: ls -R
        working-directory: ${{runner.temp}}/artifacts
      - name: Create zip files
        run: |
          for CONFIG in RelWithDebInfo; do
            for ZIP_ARTIFACT in "" "-RemoteControl" "-Symbols"; do
              (
                cd ${{runner.temp}}/artifacts/OpenKneeboard-${CONFIG}${ZIP_ARTIFACT}
                zip -r \
                  "${{runner.temp}}/OpenKneeboard-${{github.ref_name}}-${CONFIG}${ZIP_ARTIFACT}.zip" \
                  ./
              )
            done
          done
      - name: Create draft release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_name: Release ${{github.ref_name}}
          tag_name: ${{github.ref_name}}
          draft: true
          body_path: ${{runner.temp}}/release_notes.md
      - name: Attach -RelWithDebInfo.msix
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{runner.temp}}/artifacts/OpenKneeboard-RelWithDebInfo.msix/OpenKneeboard-RelWithDebInfo.msix
          asset_name: OpenKneeboard-${{github.ref_name}}.msix
          asset_content_type: application/msix
      - name: Attach -RelWithDebInfo.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{runner.temp}}/OpenKneeboard-${{github.ref_name}}-RelWithDebInfo.zip
          asset_name: OpenKneeboard-${{github.ref_name}}.zip
          asset_content_type: application/zip
      - name: Attach -RelWithDebInfo-RemoteControl.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{runner.temp}}/OpenKneeboard-${{github.ref_name}}-RelWithDebInfo-RemoteControl.zip
          asset_name: OpenKneeboard-${{github.ref_name}}-RemoteControl.zip
          asset_content_type: application/zip
      - name: Attach -RelWithDebInfo-Symbols.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{runner.temp}}/OpenKneeboard-${{github.ref_name}}-RelWithDebInfo-Symbols.zip
          asset_name: OpenKneeboard-${{github.ref_name}}-Symbols.zip
          asset_content_type: application/zip
