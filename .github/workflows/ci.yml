name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: Build (${{matrix.config}})
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2
        with:
          path: source
      - name: Make build directory
        run: cmake -E make_directory build
      - name: Fetch code-signing key
        env:
          CODE_SIGNING_PFX_BASE64: ${{ secrets.CODE_SIGNING_KEY_PFX_BASE64 }}
        run: '[System.Convert]::FromBase64String($Env:CODE_SIGNING_PFX_BASE64) | Set-Content ${{runner.temp}}/MyCert.pfx -AsByteStream'
      - name: Configure
        working-directory: build
        run: |
          cmake ${{github.workspace}}/source `
            "-DSIGNTOOL_KEY_ARGS=/f;${{runner.temp}}/MyCert.pfx" `
      - name: Compile
        working-directory: build
        run: cmake --build . --config ${{matrix.config}} --parallel
      - name: Install Default Components
        working-directory: build
        shell: pwsh
        run:
          cmake --install . `
            --config ${{matrix.config}} `
            --component Unspecified `
            --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}
      - name: Upload Executable Zips
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}
      - name: Create MSIX
        shell: pwsh
        run: |
          $kitsRoot = (Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows Kits\Installed Roots" -Name KitsRoot10).KitsRoot10
          $kitDir = (Get-ChildItem $kitsRoot/bin -Filter '10.0.*.*' | Select-Object -Last 1).FullName
          $kitBin = "$kitDir\x64"

          & "$kitBin\makeappx.exe" `
            pack `
            /d ${{runner.temp}}/OpenKneeboard-${{matrix.config}} `
            /p ${{runner.temp}}/OpenKneeboard-${{matrix.config}}.msix

          & "$kitBin\signtool.exe" `
            sign `
            /fd SHA256 `
            /f "${{runner.temp}}/MyCert.pfx" `
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}.msix
      - name: Upload MSIX
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}.msix
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}.msix
      - name: Install remote control apps
        working-directory: build
        shell: pwsh
        run:
          cmake --install . `
            --config ${{matrix.config}} `
            --component RemoteControl `
            --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-RemoteControl
      - name: Upload remote control zip
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}-RemoteControl
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-RemoteControl/bin
      - name: Install Debug Symbols
        working-directory: build
        shell: pwsh
        run:
          cmake --install . `
            --config ${{matrix.config}} `
            --component DebugSymbols `
            --prefix ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-Symbols
      - name: Upload Symbol Zips
        uses: actions/upload-artifact@v2
        with:
          name: OpenKneeboard-${{matrix.config}}-Symbols
          path:
            ${{runner.temp}}/OpenKneeboard-${{matrix.config}}-Symbols
    strategy:
      matrix:
        config: [RelWithDebInfo, Debug]
